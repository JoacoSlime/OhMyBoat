@inherits LayoutComponentBase;
@using Microsoft.AspNetCore.Components.Authorization;
@using OhMyBoat.UI.Client.Extensions;
@inject AuthenticationStateProvider authStateProvider;
@inject NavigationManager navManager;
@inject IJSRuntime JsRuntime;


<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <CascadingAuthenticationState>
                <AuthorizeView>
                    <Authorized>
                        <button class="btn-secondary" @onclick=logoutClick href="javascript:void(0)"><span class="oi oi-account-logout" aria-hidden="true"></span> Cerrar Sesión</button>
                        <a href="profile" class="account-button"><span class="oi oi-person" title="Mi Cuenta" aria-hidden="true"></span></a>
                        <span class="oi oi-icon-name" title="icon name" aria-hidden="true"></span>
                    </Authorized>
                </AuthorizeView>
            </CascadingAuthenticationState>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>



@code {
    private async Task logoutClick() {
        if (!await JsRuntime.InvokeAsync<bool>("confirm", "Estás seguro de que quieres cerrar la sesión?"))
            return;
        await logout();
    }
    private async Task logout()
    {
        var authState = (AuthenticationExtension) authStateProvider;
        await authState.ActualizarEstadoAutenticacion(null);
        navManager.NavigateTo("/", true);
    }
}