@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider authStateProvider
@using OhMyBoat.UI.Shared.Entidades
@using OhMyBoat.UI.Shared
@using Microsoft.JSInterop
@using System
@inject IJSRuntime JsRuntime
@inject HttpClient HttpClient
@inject NavigationManager Navegador
@using System.ComponentModel.DataAnnotations



<h3>Publicar Vehiculo terrestre</h3>
<html>
    <div class="form_field">
        <label for="nombre"><b>Patente del Vehiculo</b></label>        
        <input @bind="matricula" type="text" placeholder="MO 122 RO" name="nombre" required/> 
    </div>

    <div class="input-group">
	<div class="custom-file">
		<InputFile class="custom-file-input"  OnChange="OnChange" accept="image/png, image/jpeg" id="inputFile" />
		<label class="custom-file-label" for="inputFile">Choose file</label>
	</div>
    @if (filesBase64 != "" )
    {
	    <img src="@filesBase64" />
    }
</div>

<select  @bind="tipoVec"name="select">
  <option selected> Auto</option>
  <option >Camioneta</option>
  <option >Moto</option>
</select>

    <div class="form_field">
        <label for="fecha de nacimiento"><b>Antiguedad del Vehiculo</b></label>     
        <input @bind="antiguedad" type="int"   />
    </div>
    <div class="form_field">
        <label for="Descripcion"><b>Descripcion del vehiculo</b></label>
        <input @bind="descripcion" type="String"   >
    </div>
    <button class="btn btn-primary" type="submit" @onclick="cargaVehiculoterrrestre">cargar vehiculo</button>
</html>



@code {
    [Required]
    private string matricula { get; set; } = "";
   // [Required]
    //private string? base64imagen { get; set; } = "";
    [Required]
    private int antiguedad { get; set; } = 0;
    [Required]
    private string? descripcion { get; set; } = "";
    [Required]
    private TipoVehiculo tipoVec {get; set;}
    
    
    private string Email { get; set; } = "";
    string filesBase64 = "";
	string message = "InputFile";
	bool isDisabled = false;

    async Task OnChange(InputFileChangeEventArgs e)
    {
        var file = e.File;   // agarra las fotos      
            var resizedFile = await file.RequestImageFileAsync(file.ContentType, 640, 480); // le hace un resize
            var buf = new byte[resizedFile.Size];   // buffer para llenar la data de la imagen
            using (var stream = resizedFile.OpenReadStream())
            {
                await stream.ReadAsync(buf);    // copia el stream a el buffer
            }
            filesBase64 = ($"data:image;base64,{Convert.ToBase64String(buf)}"); // lo convierte a base64
        
        message = "subi las img para continuar";
    }
    AuthenticationState Auth;
    protected override async Task OnInitializedAsync()
    {
       Auth = await authStateProvider.GetAuthenticationStateAsync();
        Email = Auth.User.Claims.Where(c => c.Type == ClaimTypes.Email).First().Value;  
    }

     async private Task cargaVehiculoterrrestre()
    {
          

        Terrestre vec= new Terrestre() {Matricula=this.matricula ,Antiguedad = this.antiguedad, descripcion = this.descripcion,Tipo =this.tipoVec , IDCliente = this.Email, base64imagen = this.filesBase64};

        var RespuestaSv = await HttpClient.PostAsJsonAsync<Terrestre>("api/Vehiculos/CargarVehiculoTerrestre", vec);

        if (RespuestaSv.StatusCode == System.Net.HttpStatusCode.OK)
        {                       
            await JsRuntime.InvokeVoidAsync("alert", "Vehiculo Registrado Con Exito");
        }
        else
        {
             await JsRuntime.InvokeVoidAsync("alert", "me rompi");
        }
    } 
}
