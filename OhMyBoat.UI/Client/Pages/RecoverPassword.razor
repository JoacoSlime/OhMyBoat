@page "/recover-password"
@inject HttpClient HttpClient
@using OhMyBoat.UI.Shared.Entidades;
@using OhMyBoat.UI.Shared;
@inject IJSRuntime JsRuntime;
@inject NavigationManager NavManager;
@using Microsoft.AspNetCore.Components.Authorization;


<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <h1>No.</h1>
            @{NavManager.NavigateTo("",true);}
        </Authorized>
        <NotAuthorized>

<h3>Recupere su cuenta</h3>


<div class="form_field">
    <h1>Ingrese su email para poder enviarle un link de recuperacion de cuenta</h1>
    <label for="email"><b>E-mail</b></label>
    <input @bind="Email" type="text" placeholder="email@example.com" name="email" required asp-for="Email" />
    <button class="btn btn-primary" type="submit" @onclick="Recuperar">Recuperar cuenta</button>
</div>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private LoginDTO LoginDTO = new();
    private string Email { get; set; } = "";

    private async Task Recuperar()
    {
        if(!Utils.IsValidEmail(Email)){
            await JsRuntime.InvokeVoidAsync("alert", "Ingrese un correo valido");
            return;
        }else
        {
            LoginDTO.Email = Email;
            var respuestaSV = await HttpClient.PostAsJsonAsync<LoginDTO>("api/cuenta/Recuperacion", LoginDTO);
            if (respuestaSV.IsSuccessStatusCode)
            {
                await JsRuntime.InvokeVoidAsync("alert", "Si existe una cuenta asociada a ese email recibirá un correo para confirmar la recuperación de la cuenta");
                NavManager.NavigateTo("/");
            }
            else
            {
                await JsRuntime.InvokeVoidAsync("alert", "Error de API");
                NavManager.NavigateTo("/");
            }
        }
    }
}
