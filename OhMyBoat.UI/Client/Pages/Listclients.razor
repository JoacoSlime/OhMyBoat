@page "/ListadoClientes"
@inject HttpClient HttpClient
@using OhMyBoat.UI.Client.Extensions
@using OhMyBoat.UI.Shared
@using OhMyBoat.UI.Shared.Entidades
@inject IJSRuntime JsRuntime;

@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Authorization;          // esto va en todas las fucking paginas que se requiera un rol 
@attribute [Authorize(Roles = "jefe,empleado")]


<h3>Lista de clientes</h3>

<AuthorizeView>
    <Authorized>
<table class="table">
    <thead>
        <tr>        
          
            <th>Nombre</th>
            <th>Email</th>
            <th>Bloqueado</th>
            <th>Contacto</th>
        </tr>
    </thead>
    <tbody>
        @if (ListaDeClientes != null)
        {
        @foreach (var Cli in ListaDeClientes)
        {
            <tr>
                <td>@Cli.Nombre</td>
                <td>@Cli.Email</td>
                <td>@Cli.Bloqueado </td>
                <td>
                </td>
            </tr>
        }
        }
    </tbody>
</table>
  </Authorized>
</AuthorizeView>
  


@code {

List<Cliente> ListaDeClientes;


protected override async Task OnInitializedAsync()
{
            ListaDeClientes = await ((HttpClient) HttpClient).GetFromJsonAsync<List<Cliente>>("api/Usuario/ListarClientes");
        if (ListaDeClientes.Count == 0)
        {
              await JsRuntime.InvokeVoidAsync("alert", "Aun no hay clientes registrados.");
        }        
    }
} 


