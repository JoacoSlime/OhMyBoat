@page "/login"
@layout LoginLayout
@inject NavigationManager Navegador

@inject HttpClient HttpClient
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider authenticacationProvider;
@using OhMyBoat.UI.Client.Extensions
@using OhMyBoat.UI.Shared
@using OhMyBoat.UI.Shared.Entidades
@inject IJSRuntime JsRuntime;



<div class="row mt-5">

    <div class="col-lg-4 offset-lg-4 border">

        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>

        <div class="mb-3">
            <label>Correo</label>
            <input @bind="login.Email" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Contraseña</label>
            <input @bind="login.Password" class="form-control" />
        </div>

        <div class="mb-3">
            <button @onclick="iniciarSesion" class="btn btn-primary">Login</button>
        </div>

    </div>

</div>


@code {

    private LoginDTO login = new LoginDTO();


    public async Task iniciarSesion()
    {     

        if (login.Email == "")
        {
            await JsRuntime.InvokeVoidAsync("alert", "Flaco el email.");
            return;
        }
        if (login.Password == "")
        {
            await JsRuntime.InvokeVoidAsync("alert", "Flaco la contraseña");
            return;
        }
        var loginRespones = await HttpClient.PostAsJsonAsync<LoginDTO>("api/usuario/Login", login);
        if (loginRespones.IsSuccessStatusCode)
        {

            var sesionUsuario = await loginRespones.Content.ReadFromJsonAsync<SesionDTO>();
            var autenticacionEX = (AuthenticationExtension)authenticacationProvider;
            await autenticacionEX.ActualizarEstadoAutenticacion(sesionUsuario);

            Navegador.NavigateTo("/"); 

        }
   }
}
