@page "/admin/reports"

@inject HttpClient HttpClient
@using OhMyBoat.UI.Client.Extensions
@using OhMyBoat.UI.Shared
@using OhMyBoat.UI.Shared.Entidades
@inject IJSRuntime JsRuntime

@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager Navegador
@attribute [Authorize]

<AuthorizeView Roles="jefe">
    <Authorized>
        <h1>Reportes</h1>
        <Tabs EnableFadeEffect="true" NavStyle="NavStyle.VerticalPills" class="border rounded ms-3 me-3 p-3">
            <Tab title="Tipo de vehiculo más usados en trueques">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteVehiculoUsado/>
                    </div>
                </Content>
            </Tab>
            <Tab title="Tipo de navios más usados en trueques">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteNaviosUsados/>
                    </div>
                </Content>
            </Tab>
            <Tab title="Tipo de embarcaciones deudoras por sucursal">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteEmbarcacionesDeudoras/>
                    </div>
                </Content>
            </Tab>
            <Tab title="Tipo de embarcaciones registradas">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteTipoDeEmbarcacion/>
                    </div>
                </Content>
            </Tab>
            <Tab title="Tipo de vehículos registrados">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteTipoDeVehiculo/>
                    </div>
                </Content>
            </Tab>
            <Tab title="Clientes según sus trueques">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteClientes/>
                    </div>
                </Content>
            </Tab>
            <Tab title="Trueques conclusos e inconclusos">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteTrueques/>
                    </div>
                </Content>
            </Tab>
            <Tab title="Cantidad de embarcaciones deudoras por sucursal">
                <Content>
                    <div class="d-flex border rounded ms-3 me-3 p-3">
                        <ReporteNaviosDeuda/>
                    </div>
                </Content>
            </Tab>
        </Tabs>
        <Button @onclick="async ()=> await Nuke()" Class="btn-danger">Nukear base de datos</Button>
    </Authorized>
    <NotAuthorized>
        @{Navegador.NavigateTo("/");}
    </NotAuthorized>
</AuthorizeView>

@code {
    // No hay nada acá pa'

    // ahora si amigazo

    private async Task Nuke()
    {
        if (await JsRuntime.InvokeAsync<bool>("confirm", "USTED QUIERE BORRAR TODO LOS VEHICULOS/TURNOS/OFERTAS DEL SISTEMA?"))
        {
            var resp = await HttpClient.PostAsJsonAsync<object>("api/reporte/Nuke", null);
            if (resp.IsSuccessStatusCode)
            {
                await JsRuntime.InvokeVoidAsync("alert", "La base de datos: Me han nukeado :(");
            }
            else
            {
                await JsRuntime.InvokeVoidAsync("alert", "Error de Api, no se nukeo la base de datos");
            }
        }

    }
}